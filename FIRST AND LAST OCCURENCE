
// FIRST AND LAST OCCURENCE ---

/*
import java.util.*;

public class Solution {
    public static int FirstValue(ArrayList<Integer> arr, int n , int k)
    {
        int low =0; int high = n-1; int first = -1;
        while (low<= high)
        {
            int mid =  (low+high)/2;
            if (arr.get(mid) ==  k)
            {
                first = mid;
                high = mid-1;
            } else if (arr.get(mid)<k) {
                high = mid-1;
            }
            else
                low = mid+1;
        }
        return first;
    }

    public static int LastValue(ArrayList<Integer> arr, int n , int k)
    {
        int low =0; int high = n-1; int last = -1;
        while (low<= high)
        {
            int mid =  (low+high)/2;
            if (arr.get(mid) ==  k)
            {
                last = mid;
                low = mid+1;
            } else if (arr.get(mid)<k) {
                low = mid+1;
            }
            else
                high =  mid-1;
        }
        return last;
    }

    public static int[] FirstAndLast(ArrayList<Integer> arr, int n , int k)
    {
        int first = FirstValue(arr,n,k);
        if (first == -1) return new int[] {-1,-1};
        int last = LastValue(arr, n, k);
        if (last == -1) return new int[] {first,last};

        return new int[] {first,last};
    }
    public static void main(String[] args) {
        ArrayList<Integer> arr = new ArrayList<>(Arrays.asList(new Integer[]{5,7,7,8,8,10}));
        int n = 8; int k =8;
       int[] ans = FirstAndLast(arr, n, k);
        System.out.println(ans[0]+" "+ans[1]);
    }
}
 */
