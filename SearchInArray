import java.util.*;
public class Solution {

    public static int Search(ArrayList<Integer> arr, int n , int k)
    {
        int low = 0; int high = n-1;


        while(low<= high) {
            int mid =  (low+high)/2;
            // TARGET FOUND AT MID

            if (arr.get(mid) == k) {
                return mid;
            }


            // SEARCH FOR LOWER
            if (arr.get(low) <= arr.get(mid)) {
                if (arr.get(low) <= k && k <= arr.get(mid)) {
                    high = mid - 1;
                } else
                    low = mid + 1;
            } else {
                if (arr.get(mid) <= k && k <= arr.get(high)) {
                    low = mid + 1;
                } else {
                    high = mid - 1;
                }
            }
        }
     return  -1;
    }

    public static void main(String[] args) {
        ArrayList<Integer> arr =  new ArrayList<>(Arrays.asList(4,5,6,7,0,1,2,3));
        int n = 8; int k = 3;
        int index = Search(arr, n, k);
        System.out.println(index);
    }
}
 */


/*public class Solution {
    public static int findKRotation(int[] arr) {
        int n = arr.length; //size of array.
        int ans = Integer.MAX_VALUE, index = -1;
        for (int i = 0; i < n; i++) {
            if (arr[i] < ans) {
                ans = arr[i];
                index = i;
            }
        }
        return index;
    }

    public static void main(String[] args) {
        int[] arr = {4, 5, 6, 7, 0, 1, 2, 3};
        int ans = findKRotation(arr);
        System.out.println("The array is rotated " + ans + " times.");
    }
}
